digraph "" {
	graph [bb="0,0,1949.5,124.8"];
	node [label="\N"];
	"AcrossImpl.bridgeERC20To(uint256 amount, uint256 toChainId, bytes32 metadata, address receiverAddress, address token, uint32 quoteTimestamp, \
uint64 relayerFeePct)"	 [height=0.5,
		pos="861.03,106.8",
		width=18.766];
	"SafeTransferLib.safeTransferFrom(ERC20 token, address from, address to, uint256 amount)"	 [height=0.5,
		pos="369.03,18",
		width=10.251];
	"AcrossImpl.bridgeERC20To(uint256 amount, uint256 toChainId, bytes32 metadata, address receiverAddress, address token, uint32 quoteTimestamp, \
uint64 relayerFeePct)" -> "SafeTransferLib.safeTransferFrom(ERC20 token, address from, address to, uint256 amount)" [key=call,
	label=" call",
	lp="671.88,62.4",
	pos="e,465.44,35.402 762.35,88.99 679.24,73.99 560.61,52.579 475.4,37.2"];
"SpokePool.deposit(address recipient, address originToken, uint256 amount, uint256 destinationChainId, uint64 relayerFeePct, uint32 \
quoteTimestamp)" [height=0.5,
	pos="1353,18",
	width=16.57];
"AcrossImpl.bridgeERC20To(uint256 amount, uint256 toChainId, bytes32 metadata, address receiverAddress, address token, uint32 quoteTimestamp, \
uint64 relayerFeePct)" -> "SpokePool.deposit(address recipient, address originToken, uint256 amount, uint256 destinationChainId, uint64 relayerFeePct, uint32 \
quoteTimestamp)" [key=call,
label=" call",
lp="1163.9,62.4",
pos="e,1254.5,35.78 959.7,88.99 1042.1,74.112 1159.5,52.927 1244.6,37.575"];
}
